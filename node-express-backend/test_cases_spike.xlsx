| TestCaseID | Module | TestCaseTitle | Preconditions | TestSteps | ExpectedResult | Priority | TestData | Status |
|------------|--------|---------------|---------------|-----------|----------------|----------|----------|--------|
| SPK001 | Load Pattern | Baseline Load (10 users) | 1. Backend server is running<br>2. Database is accessible<br>3. System is stable | 1. Start K6 spike test<br>2. Ramp up to 10 users over 30s<br>3. Monitor system performance | 1. System handles 10 users normally<br>2. Response times < 800ms<br>3. Error rate < 5% | High | 10 concurrent users for 30s | Not Executed |
| SPK002 | Load Pattern | Sudden Spike to High Load (100 users) | 1. Backend server is running<br>2. System handling baseline load | 1. Increase load from 10 to 100 users<br>2. Monitor system behavior<br>3. Check for performance degradation | 1. System responds to sudden load increase<br>2. Response times may increase but remain < 2s<br>3. Error rate < 30% | High | Sudden increase to 100 users over 1m | Not Executed |
| SPK003 | Load Pattern | Sustained High Load (100 users) | 1. System handling spike load<br>2. Performance metrics recorded | 1. Maintain 100 users for 2 minutes<br>2. Monitor system stability<br>3. Check for resource exhaustion | 1. System maintains stability under sustained load<br>2. Response times remain consistent<br>3. No memory leaks or crashes | High | 100 users sustained for 2m | Not Executed |
| SPK004 | Load Pattern | Scale Down and Recovery | 1. System under high load<br>2. Performance metrics recorded | 1. Reduce load from 100 to 20 users<br>2. Monitor recovery time<br>3. Check system stability | 1. System recovers quickly from high load<br>2. Response times return to baseline<br>3. No permanent performance degradation | High | Load reduction from 100 to 20 users over 1m | Not Executed |
| SPK005 | Load Pattern | Final Peak Stress (150 users) | 1. System has recovered from previous stress<br>2. Performance baseline established | 1. Increase load to 150 users<br>2. Monitor system behavior<br>3. Check for breaking points | 1. System handles peak load<br>2. Response times < 3s<br>3. Error rate manageable | High | Peak load of 150 users for 1m | Not Executed |
| SPK006 | Task Operations | Mass Task Creation Under Spike Load | 1. Valid JWT token available<br>2. System under spike load | 1. Create 1-5 tasks per iteration<br>2. Monitor database performance<br>3. Check for connection pool issues | 1. Tasks created successfully<br>2. Database handles concurrent writes<br>3. Response times < 5s | High | Random task data with timestamps | Not Executed |
| SPK007 | Task Operations | Concurrent Read Operations | 1. Valid JWT token available<br>2. Tasks exist in database | 1. Execute 2-10 concurrent read requests<br>2. Test various endpoints (status, priority, due dates)<br>3. Monitor database read performance | 1. All read operations complete<br>2. Database handles concurrent reads<br>3. Response times < 5s | High | Multiple GET requests to different endpoints | Not Executed |
| SPK008 | Task Operations | Mixed CRUD Operations Under Stress | 1. Valid JWT token available<br>2. System under spike load | 1. Execute random combinations of GET, POST, PUT, DELETE<br>2. Monitor operation success rates<br>3. Check for data consistency | 1. Operations complete successfully<br>2. Data remains consistent<br>3. Response times acceptable | High | Random CRUD operation combinations | Not Executed |
| SPK009 | Authentication | Authentication Under Spike Load | 1. System under spike load<br>2. Multiple users authenticating | 1. Test login with valid credentials<br>2. Test with invalid tokens<br>3. Monitor authentication performance | 1. Valid logins succeed<br>2. Invalid tokens properly rejected<br>3. Authentication response times < 5s | High | Valid and invalid authentication data | Not Executed |
| SPK010 | Error Handling | Error Handling Under Spike Load | 1. System under spike load<br>2. Various error conditions | 1. Send invalid data<br>2. Test non-existent resources<br>3. Monitor error response consistency | 1. Appropriate error status codes<br>2. Meaningful error messages<br>3. Error handling performance acceptable | Medium | Invalid data, non-existent IDs | Not Executed |
| SPK011 | Rate Limiting | Rate Limiting Under Spike Load | 1. System under spike load<br>2. Rate limiting configured | 1. Send 5-15 rapid requests<br>2. Monitor rate limiting behavior<br>3. Check for 429 responses | 1. Rate limiting works correctly<br>2. 429 responses when appropriate<br>3. System remains stable | Medium | Rapid sequential requests | Not Executed |
| SPK012 | Memory Management | Memory Usage Under Spike Load | 1. System under spike load<br>2. Memory monitoring enabled | 1. Create large payloads<br>2. Monitor memory usage<br>3. Check for memory leaks | 1. Memory usage remains stable<br>2. No memory leaks detected<br>3. Large payloads handled correctly | Medium | Large task descriptions (10KB+) | Not Executed |
| SPK013 | Database | Database Connection Pool Under Spike Load | 1. System under spike load<br>2. Database connection pooling enabled | 1. Execute multiple concurrent requests<br>2. Monitor connection pool usage<br>3. Check for connection errors | 1. Connection pool handles load<br>2. No connection pool exhaustion<br>3. Database remains responsive | High | Multiple concurrent database operations | Not Executed |
| SPK014 | Performance | Response Time Degradation Pattern | 1. System under various load levels<br>2. Performance monitoring enabled | 1. Measure response times at each stage<br>2. Identify performance degradation points<br>3. Document breaking points | 1. Performance degradation documented<br>2. Breaking points identified<br>3. Recovery patterns observed | High | Performance metrics at each load stage | Not Executed |
| SPK015 | System Stability | System Stability Under Spike Load | 1. System under spike load<br>2. Monitoring tools active | 1. Monitor CPU usage<br>2. Monitor memory usage<br>3. Monitor network usage | 1. System remains stable<br>2. No crashes or hangs<br>3. Resource usage reasonable | High | System resource monitoring data | Not Executed |
| SPK016 | Recovery | System Recovery After Spike | 1. System has experienced spike load<br>2. Load reduced to normal levels | 1. Monitor response time recovery<br>2. Check memory cleanup<br>3. Verify database performance | 1. System recovers to baseline performance<br>2. Memory usage returns to normal<br>3. Database performance restored | High | Recovery metrics after load reduction | Not Executed |
| SPK017 | User Experience | User Experience Under Spike Load | 1. System under spike load<br>2. Multiple user scenarios | 1. Simulate different user types<br>2. Monitor operation success rates<br>3. Check response consistency | 1. All user types can operate<br>2. Success rates remain acceptable<br>3. Response times consistent | Medium | Different user behavior patterns | Not Executed |
| SPK018 | Edge Cases | Edge Case Handling Under Spike Load | 1. System under spike load<br>2. Various edge conditions | 1. Test with malformed requests<br>2. Test with invalid data<br>3. Monitor error handling | 1. Edge cases handled gracefully<br>2. Error responses consistent<br>3. System stability maintained | Medium | Malformed requests, invalid data | Not Executed |
| SPK019 | Monitoring | Performance Monitoring During Spike | 1. Monitoring tools configured<br>2. System under spike load | 1. Collect performance metrics<br>2. Monitor system resources<br>3. Document observations | 1. All metrics collected successfully<br>2. Monitoring tools remain responsive<br>3. Data quality maintained | Medium | Performance monitoring data | Not Executed |
| SPK020 | Documentation | Spike Test Results Documentation | 1. All spike tests completed<br>2. Performance data collected | 1. Compile test results<br>2. Document breaking points<br>3. Create recommendations | 1. Results documented clearly<br>2. Breaking points identified<br>3. Actionable recommendations provided | Medium | Test results and performance data | Not Executed |
