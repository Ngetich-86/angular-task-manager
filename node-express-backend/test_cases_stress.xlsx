| TestCaseID | Module | TestCaseTitle | Preconditions | TestSteps | ExpectedResult | Priority | TestData | Status |
|------------|--------|---------------|---------------|-----------|----------------|----------|----------|--------|
| STR001 | Load Stages | Ramp Up to Moderate Load (50 users) | 1. Backend server is running<br>2. Database is accessible<br>3. System is stable | 1. Start K6 stress test<br>2. Ramp up to 50 users over 2m<br>3. Monitor system performance | 1. System handles 50 users normally<br>2. Response times < 2s<br>3. Error rate < 10% | High | 50 concurrent users for 2m | Not Executed |
| STR002 | Load Stages | Sustained Moderate Load (50 users) | 1. System handling moderate load<br>2. Performance baseline established | 1. Maintain 50 users for 5 minutes<br>2. Monitor system stability<br>3. Check for performance degradation | 1. System maintains stability<br>2. Response times remain consistent<br>3. No resource exhaustion | High | 50 users sustained for 5m | Not Executed |
| STR003 | Load Stages | Ramp Up to High Load (150 users) | 1. System handling moderate load<br>2. Performance metrics recorded | 1. Increase load from 50 to 150 users<br>2. Monitor system behavior<br>3. Check for performance degradation | 1. System responds to load increase<br>2. Response times < 5s<br>3. Error rate < 30% | High | Load increase to 150 users over 3m | Not Executed |
| STR004 | Load Stages | Sustained High Load (150 users) | 1. System handling high load<br>2. Performance metrics recorded | 1. Maintain 150 users for 10 minutes<br>2. Monitor system stability<br>3. Check for resource exhaustion | 1. System maintains stability under sustained load<br>2. Response times remain consistent<br>3. No memory leaks or crashes | High | 150 users sustained for 10m | Not Executed |
| STR005 | Load Stages | Peak Stress (300 users) | 1. System handling high load<br>2. Performance baseline established | 1. Increase load to 300 users<br>2. Monitor system behavior<br>3. Check for breaking points | 1. System handles peak load<br>2. Response times < 8s<br>3. Error rate manageable | High | Peak load of 300 users for 5m | Not Executed |
| STR006 | Load Stages | Sustained Peak Stress (300 users) | 1. System handling peak load<br>2. Performance metrics recorded | 1. Maintain 300 users for 8 minutes<br>2. Monitor system stability<br>3. Check for resource exhaustion | 1. System maintains stability under peak load<br>2. Response times remain consistent<br>3. No system failures | High | 300 users sustained for 8m | Not Executed |
| STR007 | Load Stages | Overload (500 users) | 1. System handling peak load<br>2. Performance baseline established | 1. Increase load to 500 users<br>2. Monitor system behavior<br>3. Check for system failures | 1. System handles overload gracefully<br>2. Response times < 10s<br>3. Error rate acceptable | High | Overload of 500 users for 5m | Not Executed |
| STR008 | Load Stages | Recovery Test (100 users) | 1. System has experienced overload<br>2. Performance metrics recorded | 1. Reduce load to 100 users<br>2. Monitor recovery time<br>3. Check system stability | 1. System recovers from overload<br>2. Response times return to acceptable levels<br>3. No permanent performance degradation | High | Load reduction to 100 users for 3m | Not Executed |
| STR009 | Task Operations | Mass Task Creation Under Stress | 1. Valid JWT token available<br>2. System under stress load | 1. Create 5-15 tasks per iteration<br>2. Monitor database performance<br>3. Check for connection pool issues | 1. At least 30% task creation success<br>2. Database handles concurrent writes<br>3. Response times < 15s | High | Random task data with timestamps | Not Executed |
| STR010 | Task Operations | Concurrent Read Operations Under Stress | 1. Valid JWT token available<br>2. Tasks exist in database | 1. Execute 5-20 concurrent read requests<br>2. Test various endpoints<br>3. Monitor database read performance | 1. At least 40% read operation success<br>2. Database handles concurrent reads<br>3. Response times < 10s | High | Multiple GET requests to different endpoints | Not Executed |
| STR011 | Task Operations | Mixed CRUD Operations Under Stress | 1. Valid JWT token available<br>2. System under stress load | 1. Execute 3-10 random CRUD operations<br>2. Monitor operation success rates<br>3. Check for data consistency | 1. Operations complete successfully<br>2. Data remains consistent<br>3. Response times acceptable | High | Random CRUD operation combinations | Not Executed |
| STR012 | Authentication | Authentication Under Extreme Stress | 1. System under extreme stress load<br>2. Multiple users authenticating | 1. Test login with valid credentials<br>2. Test with invalid tokens<br>3. Monitor authentication performance | 1. Valid logins succeed<br>2. Invalid tokens properly rejected<br>3. Authentication response times < 10s | High | Valid and invalid authentication data | Not Executed |
| STR013 | Error Handling | Error Handling Under Extreme Stress | 1. System under extreme stress load<br>2. Various error conditions | 1. Send invalid data<br>2. Test non-existent resources<br>3. Monitor error response consistency | 1. Appropriate error status codes<br>2. Meaningful error messages<br>3. Error handling performance acceptable | Medium | Invalid data, non-existent IDs | Not Executed |
| STR014 | Rate Limiting | Rate Limiting Under Extreme Stress | 1. System under extreme stress load<br>2. Rate limiting configured | 1. Send 10-30 rapid requests<br>2. Monitor rate limiting behavior<br>3. Check for 429 responses | 1. Rate limiting works correctly<br>2. 429 responses when appropriate<br>3. System remains stable | Medium | Rapid sequential requests | Not Executed |
| STR015 | Memory Management | Memory Usage Under Extreme Stress | 1. System under extreme stress load<br>2. Memory monitoring enabled | 1. Create large payloads (50KB+)<br>2. Monitor memory usage<br>3. Check for memory leaks | 1. Memory usage remains stable<br>2. No memory leaks detected<br>3. Large payloads handled correctly | Medium | Large task descriptions with metadata | Not Executed |
| STR016 | Database | Database Connection Pool Under Extreme Stress | 1. System under extreme stress load<br>2. Database connection pooling enabled | 1. Execute multiple concurrent requests<br>2. Monitor connection pool usage<br>3. Check for connection errors | 1. Connection pool handles extreme load<br>2. No connection pool exhaustion<br>3. Database remains responsive | High | Multiple concurrent database operations | Not Executed |
| STR017 | Performance | Response Time Under Extreme Stress | 1. System under extreme stress load<br>2. Performance monitoring enabled | 1. Measure response times at each stage<br>2. Monitor performance degradation<br>3. Document breaking points | 1. 95% of requests < 5s during stress<br>2. Performance degradation documented<br>3. Breaking points identified | High | Performance metrics at each load stage | Not Executed |
| STR018 | System Stability | System Stability Under Extreme Stress | 1. System under extreme stress load<br>2. Monitoring tools active | 1. Monitor CPU usage<br>2. Monitor memory usage<br>3. Monitor network usage | 1. System remains stable<br>2. No crashes or hangs<br>3. Resource usage reasonable | High | System resource monitoring data | Not Executed |
| STR019 | Recovery | System Recovery After Extreme Stress | 1. System has experienced extreme stress<br>2. Load reduced to normal levels | 1. Monitor response time recovery<br>2. Check memory cleanup<br>3. Verify database performance | 1. System recovers to baseline performance<br>2. Memory usage returns to normal<br>3. Database performance restored | High | Recovery metrics after load reduction | Not Executed |
| STR020 | Documentation | Stress Test Results Documentation | 1. All stress tests completed<br>2. Performance data collected | 1. Compile test results<br>2. Document breaking points<br>3. Create recommendations | 1. Results documented clearly<br>2. Breaking points identified<br>3. Actionable recommendations provided | Medium | Test results and performance data | Not Executed |
